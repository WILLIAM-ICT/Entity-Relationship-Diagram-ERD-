1. Creating the ERD QIZ1

  Table product {
  product_id INT [pk]
  name VARCHAR
  brand_id INT [ref: > brand.brand_id]
  category_id INT [ref: > product_category.category_id]
  base_price DECIMAL
}

Table brand {
  brand_id INT [pk]
  brand_name VARCHAR
}

Table product_category {
  category_id INT [pk]
  category_name VARCHAR
}

Table color {
  color_id INT [pk]
  color_name VARCHAR
}

Table product_image {
  image_id INT [pk]
  product_id INT [ref: > product.product_id]
  image_url VARCHAR
}

Table product_item {
  item_id INT [pk]
  product_id INT [ref: > product.product_id]
  color_id INT [ref: > color.color_id]
  size_id INT [ref: > size_option.size_option_id]
  price DECIMAL
}

Table size_category {
  size_category_id INT [pk]
  category_name VARCHAR
}

Table size_option {
  size_option_id INT [pk]
  size_category_id INT [ref: > size_category.size_category_id]
  size_name VARCHAR
}

Table product_variation {
  variation_id INT [pk]
  product_id INT [ref: > product.product_id]
  size_option_id INT [ref: > size_option.size_option_id]
  color_id INT [ref: > color.color_id]
}

Table product_attribute {
  attribute_id INT [pk]
  product_id INT [ref: > product.product_id]
  attribute_name VARCHAR
  attribute_value VARCHAR
}

Table attribute_category {
  attribute_category_id INT [pk]
  category_name VARCHAR
}

Table attribute_type {
  attribute_type_id INT [pk]
  type_name VARCHAR
}


 SQL Schema and Queries Questions 2

   -- Create 'brand' table
CREATE TABLE brand (
  brand_id INT PRIMARY KEY AUTO_INCREMENT,
  brand_name VARCHAR(255) NOT NULL
);

-- Create 'product_category' table
CREATE TABLE product_category (
  category_id INT PRIMARY KEY AUTO_INCREMENT,
  category_name VARCHAR(255) NOT NULL
);

-- Create 'color' table
CREATE TABLE color (
  color_id INT PRIMARY KEY AUTO_INCREMENT,
  color_name VARCHAR(100) NOT NULL
);

-- Create 'size_category' table
CREATE TABLE size_category (
  size_category_id INT PRIMARY KEY AUTO_INCREMENT,
  category_name VARCHAR(100) NOT NULL
);

-- Create 'size_option' table
CREATE TABLE size_option (
  size_option_id INT PRIMARY KEY AUTO_INCREMENT,
  size_category_id INT,
  size_name VARCHAR(50),
  FOREIGN KEY (size_category_id) REFERENCES size_category(size_category_id)
);

-- Create 'product' table
CREATE TABLE product (
  product_id INT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  brand_id INT,
  category_id INT,
  base_price DECIMAL(10, 2),
  FOREIGN KEY (brand_id) REFERENCES brand(brand_id),
  FOREIGN KEY (category_id) REFERENCES product_category(category_id)
);

-- Create 'product_image' table
CREATE TABLE product_image (
  image_id INT PRIMARY KEY AUTO_INCREMENT,
  product_id INT,
  image_url VARCHAR(255),
  FOREIGN KEY (product_id) REFERENCES product(product_id)
);

-- Create 'product_item' table
CREATE TABLE product_item (
  item_id INT PRIMARY KEY AUTO_INCREMENT,
  product_id INT,
  color_id INT,
  size_id INT,
  price DECIMAL(10, 2),
  FOREIGN KEY (product_id) REFERENCES product(product_id),
  FOREIGN KEY (color_id) REFERENCES color(color_id),
  FOREIGN KEY (size_id) REFERENCES size_option(size_option_id)
);

-- Create 'product_variation' table
CREATE TABLE product_variation (
  variation_id INT PRIMARY KEY AUTO_INCREMENT,
  product_id INT,
  size_option_id INT,
  color_id INT,
  FOREIGN KEY (product_id) REFERENCES product(product_id),
  FOREIGN KEY (size_option_id) REFERENCES size_option(size_option_id),
  FOREIGN KEY (color_id) REFERENCES color(color_id)
);

-- Create 'product_attribute' table
CREATE TABLE product_attribute (
  attribute_id INT PRIMARY KEY AUTO_INCREMENT,
  product_id INT,
  attribute_name VARCHAR(255),
  attribute_value VARCHAR(255),
  FOREIGN KEY (product_id) REFERENCES product(product_id)
);

-- Create 'attribute_category' table
CREATE TABLE attribute_category (
  attribute_category_id INT PRIMARY KEY AUTO_INCREMENT,
  category_name VARCHAR(100)
);

-- Create 'attribute_type' table
CREATE TABLE attribute_type (
  attribute_type_id INT PRIMARY KEY AUTO_INCREMENT,
  type_name VARCHAR(50)
);


3️⃣ Group Collaboration
Ensure that everyone has an understanding of each part of the database and is comfortable with their responsibilities.

Use GitHub for version control and track progress collaboratively. Share your ERD and SQL scripts there for review.

Regular meetings and discussions will be key to keeping everyone on the same page. For example:

Assign tasks for each entity (table).

Review design choices together.

Share your thoughts on how data will be inserted, updated, and deleted in each table.
